// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  clerkUserId   String  @unique
  email     String
  name      String?
  username  String
  imageUrl  String?
  blogs     Blog[]      
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  likes     Like[]        
  comments  Comment[]
}

model Blog {
  id          String      @id @default(uuid())
  authorId    String      
  slug        String?     @unique
  content     Json
  title       String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  readTime    Int
  likes       Like[]
  comments    Comment[]
  author      User        @relation(fields: [authorId], references: [clerkUserId])
}

model Like {
  id          String      @id @default(uuid())
  userId      String
  blogId      String
  blog        Blog        @relation(fields: [blogId], references: [id])
  createdAt   DateTime    @default(now())
  user        User        @relation(fields: [userId], references: [clerkUserId])

  @@unique([blogId, userId])
}

model Comment {
  id          String      @id @default(uuid())
  userId      String      
  blogId      String  
  slug        String
  content     String
  createdAt   DateTime    @default(now())
  blog        Blog        @relation(fields: [blogId], references: [id])
  user        User        @relation(fields: [userId], references: [clerkUserId])
}